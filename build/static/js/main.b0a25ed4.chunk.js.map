{"version":3,"sources":["components/Navbar.js","components/Textarea.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","bgMode","to","title","type","id","style","marginRight","marginLeft","onClick","handleMode","htmlFor","textMode","Textarea","useState","text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","words","split","uppercaseword","forEach","element","charAt","slice","trim","length","filter","word","About","App","mode","setMode","settextMode","document","body","backgroundColor","color","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0a25ed4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  \r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.bgMode} bg-${props.bgMode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-check form-switch\" style={{marginRight:\"25px\",marginLeft:\"15px\"}}>\r\n          <input onClick={props.handleMode} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.textMode}</label>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function Textarea(props) {\r\n\r\n  \r\n    const capitalFirstLetter = ()=>{\r\n            let words = text.split(\" \")\r\n            let uppercaseword = ''\r\n            words.forEach(element => {\r\n                uppercaseword += element.charAt(0).toUpperCase() + element.slice(1) + \" \"\r\n\r\n            });\r\n            setText(uppercaseword.trim())\r\n\r\n    }\r\n\r\n    const words = ()=>{\r\n        \r\n    //    return (text.split(/[ ]+/).length<=1&&text.length>=1)?0:(text.split(/[ ]+/).length-1)\r\n        return text.split(/\\s+/).filter((word)=>{\r\n            return word.length!==0;\r\n        }).length\r\n\r\n    }\r\n\r\n\r\n    const upperCase = ()=>{\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n\r\n    }\r\n    \r\n\r\n    const lowerCase = ()=>{\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n\r\n    }\r\n    \r\n    const clear = ()=>{\r\n       setText(\"\")\r\n    }\r\n\r\n    const onChangeText = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text,setText] = useState(\"\")\r\nreturn (\r\n    <div>\r\n        <h2 className=\"fst-italic text-center\">{props.heading}</h2> \r\n        \r\n        <textarea className={`form-control bg-secondary bg-gradient p-2 text-${props.bgMode===`dark`?`white`:`black`} bg-opacity-25`} value={text} onChange={onChangeText} id=\"TextArea\" rows=\"10\"></textarea>\r\n        <div className=\"my-2\">\r\n        <button type=\"button\" className={`btn btn-${props.bgMode} mx-1 my-1`} onClick={upperCase}>Convert to Uppercase</button>\r\n        <button type=\"button\" className={`btn btn-${props.bgMode} text-${!props.bgMode} mx-1 my-1`} onClick={lowerCase}>Convert to Lowercase</button>\r\n        <button type=\"button\" className={`btn btn-${props.bgMode} mx-1 my-1`} onClick={clear}>Clear</button>\r\n        <button type=\"button\" className={`btn btn-${props.bgMode} mx-1 my-1`} onClick={(capitalFirstLetter)}>Capitalize Every first character</button>\r\n        </div>\r\n        <div className=\"container my-2\">\r\n            <h4>{text.length} characters and {words()} words</h4> \r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <div className=\"card\">\r\n        <div className={`card-body bg-${props.bgMode}`}>\r\n            <h5 className={`card-title text-${!props.bgMode}`}>Your Text</h5>\r\n            <p className={`card-text`}>{text}</p>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    </div>        \r\n    )\r\n    // (text.split(/[ ]+/).length<=1&&text.length>=1)?0:(text.split(/[ ]+/).length-1)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div className=\"container text-center\">\r\n            <h1 className=\"my-5\">{props.title}</h1>\r\n            <div >Lorem, ipsum dolor sit Lorem ipsum dolor sit a oisdjef ejfihef weihfumet consectetur adipisicing elit. Excepturi, deserunt incidunt iste, omnis autem non inventore eligendi exercitationem suscipit reprehenderit modi possimus corrupti. Laudantium cumque inventore doloremque voluptatem accusantium minima quo hic maxime expedita, asperiores nesciunt optio. Nobis, sit corrupti sed quis similique modi doloremque sint laudantium dolore quia. Illum placeat voluptate eveniet amet!lorem2\r\n                 amet consectetur adipisicing elit. Odit harum accusantium tenetur consequatur hic vero dolores dicta, excepturi suscipit temporibus. Veritatis cupiditate quas pariatur illo aliquid debitis magni, sed soluta dicta officiis rem sit nemo! Optio, autem. Dolorum inventore esse, impedit facilis alias reiciendis quas explicabo ut nobis in iste ipsa! Unde maiores voluptatibus reiciendis commodi, tempora magnam? Nulla ratione tempora vel iusto repudiandae! Quisquam deserunt dicta qui possimus mollitia itaque aperiam vero!</div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\nimport React,{useState} from 'react'\nimport About from './components/About'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [textMode, settextMode] = useState(\"Dark\")\n  const handleMode =()=>{\n    if(mode===\"light\"){\n      setMode(\"dark\")\n      settextMode(\"Light\")\n      document.body.style.backgroundColor = \"black\"\n      document.body.style.color = \"white\"\n    }\n    else{\n      setMode(\"light\")\n      settextMode(\"Dark\")\n      document.body.style.backgroundColor = \"white\"\n      document.body.style.color = \"black\"\n    }\n}\n  return (\n    <Router>\n    <>\n      {/* <Navbar title=\"PRops TItle\" /> */}\n      <Navbar title=\"TextEditor\" bgMode={mode} handleMode={handleMode} textMode={textMode}/>\n   \n    <Switch>\n          <Route path=\"/about\">\n          <div className=\"container my-3\">\n          <About title=\"About This Website\"></About>\n          </div>\n          </Route>\n          <Route path=\"/\">\n          <div className=\"container my-3\">\n          <Textarea heading=\"Write your text below\" bgMode={mode}/>\n        </div>\n          </Route>\n        </Switch>\n  </>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}